{"version":3,"file":"querystringify.js","sourceRoot":"","sources":["../../src/lib/querystringify.ts"],"names":[],"mappings":";;;AAAA,6CAA6D;AAE7D,wDAAwD;AACxD,SAAS,KAAK,CAAe,GAAM;IACjC,MAAM,MAAM,GAAG,EAAgB,CAAC;IAChC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAClC,MAAM,KAAK,GAAI,GAAW,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,KAAK,KAAK,SAAS;YAAE,SAAS;QACjC,MAAc,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KAC9B;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAgB,cAAc,CAAC,GAAwB;IACrD,OAAO,IAAA,uBAAS,EAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/B,CAAC;AAFD,wCAEC","sourcesContent":["import { ParsedUrlQueryInput, stringify } from \"querystring\";\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction clean<T extends {}>(obj: T) {\n  const result = {} as typeof obj;\n  for (const key of Object.keys(obj)) {\n    const value = (obj as any)[key];\n    if (value === undefined) continue;\n    (result as any)[key] = value;\n  }\n  return result;\n}\n\nexport function querystringify(obj: ParsedUrlQueryInput) {\n  return stringify(clean(obj));\n}\n"]}